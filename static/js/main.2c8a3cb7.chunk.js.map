{"version":3,"sources":["index.js"],"names":["Square","props","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","className","concat","winStyle","onClick","value","Board","i","_this","this","key","squares","winLine","includes","layout","rowSquares","squaresAdded","j","push","renderSquare","React","Component","Game","_this2","Object","C_Users_donal_OneDrive_Documents_Git_Repositories_React_TicTacToe_my_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","C_Users_donal_OneDrive_Documents_Git_Repositories_React_TicTacToe_my_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","C_Users_donal_OneDrive_Documents_Git_Repositories_React_TicTacToe_my_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","call","state","history","Array","fill","column","row","xIsNext","stepNumber","descOrder","col","slice","length","calculateWinner","setState","step","status","_this3","current","winner","orderText","moves","map","move","desc","jumpTo","every","handleClick","changeOrder","reversed","reverse","lines","_lines$i","C_Users_donal_OneDrive_Documents_Git_Repositories_React_TicTacToe_my_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","b","c","console","log","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2c8a3cb7.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\nfunction Square(props) {\r\n  return (\r\n    <button className={`square ${props.winStyle}`} onClick={props.onClick}>\r\n      {props.value}\r\n    </button>\r\n  );\r\n}\r\n\r\nclass Board extends React.Component {\r\n  renderSquare(i) {\r\n    return (\r\n      <Square\r\n        key={i}\r\n        value={this.props.squares[i]}\r\n        onClick={() => this.props.onClick(i)}\r\n        winStyle={this.props.winLine.includes(i) ? 'win' : ''}\r\n      />\r\n    );\r\n  }\r\n\r\n  render() {\r\n    let layout = [];\r\n    let rowSquares = [];\r\n    const squareCols = 3;\r\n    const squareRows = 3;\r\n    let squaresAdded = 0;\r\n\r\n    for (let i = 0; i < squareRows; i++) {\r\n      for (let j = 0; j < squareCols; j++) {\r\n        rowSquares.push(this.renderSquare(squaresAdded++));\r\n      }\r\n      layout.push(\r\n        <div key={i} className='board-row'>\r\n          {rowSquares}\r\n        </div>\r\n      );\r\n      rowSquares = [];\r\n    }\r\n\r\n    return <div>{layout}</div>;\r\n  }\r\n}\r\n\r\nclass Game extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      history: [\r\n        {\r\n          squares: Array(9).fill(null),\r\n          column: null,\r\n          row: null\r\n        }\r\n      ],\r\n      xIsNext: true,\r\n      stepNumber: 0,\r\n      descOrder: false\r\n    };\r\n  }\r\n\r\n  handleClick(i) {\r\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\r\n    const current = history[history.length - 1];\r\n    const squares = current.squares.slice();\r\n\r\n    if (calculateWinner(squares) || squares[i]) {\r\n      return;\r\n    }\r\n\r\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\r\n\r\n    let col, row;\r\n    if (i < 3) {\r\n      row = 1;\r\n      col = i + 1;\r\n    } else if (i >= 3 && i < 6) {\r\n      row = 2;\r\n      col = i - 2;\r\n    } else {\r\n      row = 3;\r\n      col = i - 5;\r\n    }\r\n\r\n    this.setState({\r\n      history: history.concat([\r\n        {\r\n          squares: squares,\r\n          column: col,\r\n          row: row\r\n        }\r\n      ]),\r\n      xIsNext: !this.state.xIsNext,\r\n      stepNumber: history.length\r\n    });\r\n  }\r\n\r\n  jumpTo(step) {\r\n    this.setState({\r\n      stepNumber: step,\r\n      xIsNext: step % 2 === 0\r\n    });\r\n  }\r\n\r\n  changeOrder() {\r\n    this.setState({\r\n      descOrder: !this.state.descOrder\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const history = this.state.history;\r\n    const current = history[this.state.stepNumber];\r\n    const winner = calculateWinner(current.squares);\r\n    const orderText = this.state.descOrder ? 'Descending' : 'Ascending';\r\n\r\n    const moves = history.map((step, move) => {\r\n      const desc = move\r\n        ? 'Go to move #' + move + ' (' + step.column + ', ' + step.row + ')'\r\n        : 'Go to game start';\r\n\r\n      return (\r\n        <li key={move}>\r\n          <button\r\n            onClick={() => {\r\n              this.jumpTo(move);\r\n            }}\r\n            className={this.state.stepNumber === move ? 'active' : ''}\r\n          >\r\n            {desc}\r\n          </button>\r\n        </li>\r\n      );\r\n    });\r\n\r\n    let status;\r\n    if (winner) {\r\n      status = 'Winner: ' + current.squares[winner[0]];\r\n    } else if (current.squares.every(value => value != null) && !winner) {\r\n      status = 'Draw Game!';\r\n    } else {\r\n      status = 'Next Player: ' + (this.state.xIsNext ? 'X' : 'O');\r\n    }\r\n\r\n    return (\r\n      <div className='game'>\r\n        <div className='game-board'>\r\n          <Board\r\n            squares={current.squares}\r\n            winLine={winner ? winner : []}\r\n            onClick={i => this.handleClick(i)}\r\n          />\r\n        </div>\r\n        <div className='game-info'>\r\n          <div>{status}</div>\r\n          <button onClick={() => this.changeOrder()}>{orderText}</button>\r\n          <ol reversed={this.state.descOrder}>\r\n            {this.state.descOrder ? moves.slice().reverse() : moves}\r\n          </ol>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// ========================================\r\n\r\nReactDOM.render(<Game />, document.getElementById('root'));\r\n\r\nfunction calculateWinner(squares) {\r\n  const lines = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6]\r\n  ];\r\n  for (let i = 0; i < lines.length; i++) {\r\n    const [a, b, c] = lines[i];\r\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n      console.log([a, b, c]);\r\n      return [a, b, c];\r\n    }\r\n  }\r\n  return null;\r\n}\r\n"],"sourceRoot":""}